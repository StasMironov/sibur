.header {
	$root: &;

	position: fixed;
	top: 0;
	left: 0;
	z-index: 200;
	width: 100%;
	background-color: transparent;
	transition: transform 0.4s cubic-bezier(0.475, 0.425, 0, 0.995), background-color 0.3s ease;

	&.is-fixed:not(.open) {
		opacity: 1 !important;
		//transform: translateY(0%) !important;
		transition-duration: 0.5s, 0.5s;
	}

	&.is-transformed.is-fixed:not(.open) {
		transform: translateY(-100%) !important;
	}

	&__logo {
		width: 50.3%;

		@include media-breakpoint-down(md) {
			width: 51%;
		}

		&-inner {
			width: rem(120);
			display: block;

			@include media-breakpoint-down(sm) {
				width: rem(96);
			}
	
		}
	}

	&__container {
		display: flex;
		align-items: center;
		padding-top: rem(24);
    	padding-bottom: rem(24);
	}

	&-nav {
		width: 100%;

		&__left, &__navigate {
			display: flex;
			align-items: center;
		}

		&__wrap {
			display: flex;
			align-items: center;
			justify-content: space-between;
			width: 100%;
		}

		&__el {
			margin-right: rem(24);

			&:last-child {
				margin-right: 0;
			}
			

			&--submenu {
				margin-right: rem(50);
			}
		}

		&__action {
			margin-left: rem(52);

			@include media-breakpoint-down(md) {
				margin-left: 0;
			}

			@include media-breakpoint-down(sm) {
				display: none;
			}
		}

		&__navigate {
			@include media-breakpoint-down(md) {
				display: none;
			}
		}

		&__link {
			display: flex;
			align-items: center;
			// color: $color-dark;
			@include defaultTransition(color);

			&.active {
				cursor: default;
				text-decoration: none;
				pointer-events: none;
				color: $color-green;
			}

			&:hover:not(.active):not(.header-nav__link--submenu) {
				color: $color-green;
				text-decoration: none;
			}

			&--submenu {
				cursor: pointer;
			}
		}
	}

	&__comp {
		width: rem(24);
		height: rem(24);
		background-color: red;

		&:not(:last-of-type) {
			margin-right: rem(32);
		}
	}

	&__right {
		display: flex;
	}

	&__toggle {
		margin-left: rem(28);
		width: rem(32);
		height: rem(32);
		font-size: 0;
		line-height: rem(32);
		text-align: center;
		border: 0;
		padding: 0;
		background-color: transparent;
		color: $color-black;
		cursor: pointer;

		// span {
		// 	display: block;
		// 	width: rem(32);
		// 	height: 2px;
		// 	background-color: currentColor;

		// 	&:not(:last-child) {
		// 		margin-bottom: rem(8);
		// 	}
		// }

		span {
			position: relative;
			display: block;
			width: 100%;
			height: 2px;
			background-color: currentColor;
			//transition: all .3s;
		}

		span + span {
			margin-top: 8px;
		}

		$delta: 10px;
		$duration: 0.4s;

		&.active span:nth-child(1) {
			animation: ease $duration top forwards;
		}

		&.not-active span:nth-child(1) {
			animation: ease $duration top-2 forwards;
		}

		&.active span:nth-child(2) {
			animation: ease $duration scaled forwards;
		}

		&.not-active span:nth-child(2) {
			animation: ease $duration scaled-2 forwards;
		}

		&.active span:nth-child(3) {
			animation: ease $duration bottom forwards;
		}

		&.not-active span:nth-child(3) {
			animation: ease $duration bottom-2 forwards;
		}

		@keyframes top {
			0% {
				top: 0;
				transform: rotate(0);
			}
			50% {
				top: $delta;
				transform: rotate(0);
			}
			100% {
				top: $delta;
				transform: rotate(45deg);
			}
		}

		@keyframes top-2 {
			0% {
				top: $delta;
				transform: rotate(45deg);
			}
			50% {
				top: $delta;
				transform: rotate(0deg);
			}
			100% {
				top: 0;
				transform: rotate(0deg);
			}
		}

		@keyframes bottom {
			0% {
				bottom: 0;
				transform: rotate(0);
			}
			50% {
				bottom: $delta;
				transform: rotate(0);
			}
			100% {
				bottom: $delta;
				transform: rotate(135deg);
			}
		}

		@keyframes bottom-2 {
			0% {
				bottom: $delta;
				transform: rotate(135deg);
			}
			50% {
				bottom: $delta;
				transform: rotate(0);
			}
			100% {
				bottom: 0;
				transform: rotate(0);
			}
		}

		@keyframes scaled {
			50% {
				transform: scale(0);
			}
			100% {
				transform: scale(0);
			}
		}

		@keyframes scaled-2 {
			0% {
				transform: scale(0);
			}
			50% {
				transform: scale(0);
			}
			100% {
				transform: scale(1);
			}
		}

		@include hover {
			color: rgba($color-black, 0.4);
		}

		@include media-breakpoint-up(lg) {
			display: none;
		}

		#{$root}--transparent & {
			// color: $color-white;
		}

		@at-root main.dark-slide-is-active .header:not(.in-progress):not(.submenu-opened) & {
			// color: $color-white;
		}

		@at-root body .in-progress.header--transparent & {
			// color: $color-black;
		}

		@at-root body.is-open .header:not(.in-progress):not(.submenu-opened) & {
			// color: $color-black;
		}
	}

	&__lang {
		margin-right: rem(30);

		@include media-breakpoint-down(md) {
			margin-right: rem(40);
		}

		@include media-breakpoint-down(sm) {
			display: none;
		}
	}

	&__parts {
		display: flex;
		align-items: center;

		@include media-breakpoint-down(md) {
			margin-right: rem(16);
		}
	}

	&.is-hide {
		transform: translateY(-100%);
	}

	&.show-header {
		background-color: $color-white;
	}


	// Animation
	$animation-duration: 1s !default;
	$animation-delay: .2s !default;
	$offset-Y: 20px !default;

	&[data-animate-custom] {
		#{$root}__logo {
			transform: translateY($offset-Y);
			opacity: 0;

			@at-root .is-loaded & {
				transition-duration: $animation-duration;
				transition-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
				transition-property: opacity, transform;
			}
		}

		#{$root}-nav__el {
			@include media-breakpoint-only(lg) {
				transform: translateY($offset-Y);
				opacity: 0;

				@at-root .is-loaded & {
					transition-duration: $animation-duration;
					transition-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
					transition-property: opacity, transform;
				}
			}
		}
	}

	&.animate {
		#{$root}__logo {
			opacity: 1;
			transform: none;
		}

		@include media-breakpoint-only(lg) {
			#{$root}-nav__el {
				opacity: 1;
				transform: none;
			}
		}
	}

	// Delay custom
	@for $i from 0 through 10 {
		@include media-breakpoint-only(lg) {
			#{$root}-nav__el {
				&[data-index="#{$i}"] {
					@at-root .is-loaded & {
						transition-delay: $i * $animation-delay * 0.5;
					}
				}
			}
		}
	}
}
